DROP TABLE MEMBER;
-- member table 생성
CREATE TABLE member (
	name varchar2(20),
	userid varchar2(10),
	pwd varchar2(10),
	email varchar2(20),
	phone char(13),
	admin number(1) DEFAULT 0,
	joinDate DATE DEFAULT sysdate,
	PRIMARY KEY(userid)
);

-- title
CREATE TABLE title (
	TITLE_NO  NUMBER PRIMARY KEY,
	TITLE_NAME VARCHAR2(40)
);

-- department
CREATE TABLE DEPARTMENT (
	DEPT_NO NUMBER(2) PRIMARY KEY,
	DEPT_NAME VARCHAR2(20),
	FLOOR NUMBER(2)
);

-- EMPLOYEE 테이블 생성
CREATE TABLE EMPLOYEE (
    EMP_NO   NUMBER,
    EMP_NAME VARCHAR2(20) NOT NULL,
    TNO      NUMBER,
    MANAGER  NUMBER,
    SALARY   NUMBER,
    DNO      NUMBER,
    EMAIL    VARCHAR2(60) NOT NULL,
    PASSWD   VARCHAR2(60) NOT NULL,
    REGDATE  DATE DEFAULT SYSDATE,
    TEL      CHAR(13),
    PIC_URL  VARCHAR2(100),
    CONSTRAINT EMPLOYEE_EMPNO_PK   PRIMARY KEY (EMP_NO),
    CONSTRAINT EMPLOYEE_TNO_FK     FOREIGN KEY (TNO)     REFERENCES TITLE(TITLE_NO) ON DELETE SET NULL, 
    CONSTRAINT EMPLOYEE_MANAGER_FK FOREIGN KEY (MANAGER) REFERENCES EMPLOYEE(EMP_NO),
    CONSTRAINT EMPLOYEE_SALARY_CK  CHECK (SALARY < 6000000),
    CONSTRAINT EMPLOYEE_DNO_FK     FOREIGN KEY (DNO) REFERENCES DEPARTMENT(DEPT_NO) ON DELETE CASCADE
);

-- employee

SELECT *
  FROM USER_TABLES
WHERE TABLE_name = ('MEMBER');
  
-- 접속한 계정의 테이블별 컬럼 조회
SELECT *
  FROM  USER_TAB_COLUMNS 
 WHERE table_name IN ('MEMBER');
 
-- 접속한 계정의 테이블명 제약조건 검색
SELECT *
  FROM USER_CONS_COLUMNS 
 WHERE table_name IN ('MEMBER');
 

SELECT USER FROM DUAL;


CREATE TABLE PRODUCT(
	CODE NUMBER(5) PRIMARY KEY,
	NAME VARCHAR2(100),
	PRICE NUMBER(8),
	PICTUREURL VARCHAR2(50),
	DESCRIPTION VARCHAR2(1000)
);

CREATE SEQUENCE PRODUCT_SEQ
	START WITH 1
	INCREMENT BY 1;
	

-- 트리거를 이용하여 자동으로 번호가 입력되도록 
CREATE OR REPLACE TRIGGER TRI_PRODUCT_AUTOSEQ
BEFORE INSERT ON PRODUCT --테이블 인서트전에 수행하고 인서트처리
FOR EACH ROW
BEGIN 
	IF Inserting AND :NEW.CODE IS NULL THEN --인서트다음에 입력될 새로운(new) 값(no)가 없다면
		SELECT PRODUCT_SEQ.NEXTVAL INTO :NEW.CODE FROM DUAL; --no에 넣어주겠다
	END IF;
END;